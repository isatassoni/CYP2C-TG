#load packages
library(openxlsx)
library(clipr)
library(dplyr)

# ----------------------- Correlação ----------------------- 

#Lê o arquivo da Frequência Alélica e cria uma lista com os SNPs
#arranjar uma lista de SNPs
df <- read.xlsx(file.choose())


lista_snps.1 <- unique(grep("^.+(.)$",names(df), value=TRUE, perl = TRUE))
lista_snps <- lista_snps.1[lista_snps.1 != c("POP", "NAT2","AFRL", "EASL", "SAS", 
                                             "NAT", "EURN", "AFRO", "EURS", "EASO")]

calcular_correlacoes <- function(arquivo_excel, lista_snps) {
  
  
  # cria uma lista vazia para armazenar os resultados
  resultados <- list()
  
  # loop pelos SNPs na lista
  for (snp in lista_snps) {
    # converte a coluna do SNP para numérico
    df[[snp]] <- as.numeric(df[[snp]])
    media_k9 <- data.frame(df$NAT2, df$AFRL, df$EASL, df$SAS,
                           df$NAT, df$EURN, df$AFRO, df$EURS, df$EASO)
    NAT2 <- as.numeric(media_k9$df.NAT2)
    AFRL <- as.numeric(media_k9$df.AFRL)
    EASL <- as.numeric(media_k9$df.EASL)
    SAS <- as.numeric(media_k9$df.SAS)
    NAT <- as.numeric(media_k9$df.NAT)
    EURN <- as.numeric(media_k9$df.EURN)
    AFRO <- as.numeric(media_k9$df.AFRO)
    EURS <- as.numeric(media_k9$df.EURS)
    EASO <- as.numeric(media_k9$df.EASO)
    
    
    # realiza as correlações com cada ancestralidade
    
    cNAT2 <- cor.test(df[[snp]], NAT2, method = "pearson")
    cAFRL <- cor.test(df[[snp]], AFRL, method = "pearson")
    cEASL <- cor.test(df[[snp]], EASL, method = "pearson")
    cSAS <- cor.test(df[[snp]], SAS, method = "pearson")
    cNAT <- cor.test(df[[snp]], NAT, method = "pearson")
    cEURN <- cor.test(df[[snp]], EURN, method = "pearson")
    cAFRO <- cor.test(df[[snp]], AFRO, method = "pearson")
    cEURS <- cor.test(df[[snp]], EURS, method = "pearson")
    cEASO <- cor.test(df[[snp]], EASO, method = "pearson")
    
    
    # realiza as regressões com cada ancestralidade
    reg_NAT2 <- lm(df[[snp]] ~ NAT2)
    reg_AFRL <- lm(df[[snp]] ~ AFRL)
    reg_EASL <- lm(df[[snp]] ~ EASL)
    reg_SAS <- lm(df[[snp]] ~ SAS)
    reg_NAT <- lm(df[[snp]] ~ NAT)
    reg_EURN <- lm(df[[snp]] ~ EURN)
    reg_AFRO <- lm(df[[snp]] ~ AFRO)
    reg_EURS <- lm(df[[snp]] ~ EURS)
    reg_EASO <- lm(df[[snp]] ~ EASO)
    
    lista_ANCES <- unique(grep("^.+()$",names(media_k9), value=TRUE, perl = TRUE))
    lista_ANCES <- gsub("^df\\.", "", lista_ANCES)
    
    resultados_df <- data.frame(beta = numeric(), p_value = numeric(), 
                                adjusted_r_squared = numeric(), ancestralidade = character())
    
    for(nome in lista_ANCES) {
      summary_reg <- summary(get(paste0("reg_", nome)))
      beta <- summary_reg$coefficients[nome, "Estimate"]
      p_value <- summary_reg$coefficients[nome, "Pr(>|t|)"]
      adjusted_r_squared <- summary_reg$adj.r.squared
      
      resultados_df <- rbind(resultados_df, 
                             data.frame(Ancestralidade = nome, Beta = beta, p_regr = p_value, 
                                        R_sqr_ajustado = adjusted_r_squared))
    }
    
    
    
    mariscudelersentiremossaudades <- data.frame(
      SNP = lista_snps <- gsub('\\.1','',snp),
      resultados_df,
      p_corr = c(cNAT2$p.value, cAFRL$p.value, cEASL$p.value, cSAS$p.value,
                 cNAT$p.value, cEURN$p.value, cAFRO$p.value, cEURS$p.value,
                 cEASO$p.value),
      R_corr = c(cNAT2$estimate, cAFRL$estimate, cEASL$estimate, cSAS$estimate,
                 cNAT$estimate, cEURN$estimate, cAFRO$estimate, cEURS$estimate,
                 cEASO$estimate)
    )
    
    # adiciona o data frame à lista de resultados
    resultados[[snp]] <- mariscudelersentiremossaudades
    
  }
  
  # retorna a lista de resultados
  return(resultados)
}

# Chama a função e armazena o resultado
resultadopearson <- calcular_correlacoes(arquivo_excel = "caminho_para_o_arquivo.xlsx", lista_snps = lista_snps)

# Combina os dataframes individuais em um único dataframe
CorLista <- dplyr::bind_rows(resultadopearson)

# Exporta os resultados para um arquivo Excel
write.xlsx(CorLista, "C:/Users/isado/OneDrive - uftm.edu.br/UFTM/Biomedicina - Isadora/GP-PGx/IC - TCC/resultados e figuras/resultadopearson.xlsx", rowNames = FALSE)

