#load packages
library(vcfR)
library(adegenet)
library(tibble)
library(dplyr)
library(openxlsx)
library(tidyr)
library(stringr)

#importar vcf pro R
vcfNAT <- read.vcfR(file.choose())

#extrair genotype data em dataframe
gtNAT <- extract.gt(vcfNAT, element = "GT")

gtNAT2 <- as.data.frame(gtNAT)

gtNAT2 <- gtNAT2 %>% rownames_to_column(var = "SNPs")
class(gtNAT2$SNPs)


#SNPs do haplótipo = rs2860840.T e o rs11188059.G
SNPsfiltradosNAT <- gtNAT2 %>% 
  filter(SNPs %in% c('rs11188059', 'rs2860840'))

write.xlsx(gtNAT2, file = 'SNPsperuanos' )


#transpor para depois adicionar populações
SNPsfiltradosNAT2 <- as.data.frame(t(SNPsfiltradosNAT))
SNPsfiltradosNAT2 <- tibble::rownames_to_column(SNPsfiltradosNAT2,"ID")


#renomeei as colunas e removi a linha 1 (há 2 jeitos)
SNPsfiltradosNAT2 <- SNPsfiltradosNAT2 %>%
  rename(rs11188059 = V1)

SNPsfiltradosNAT2 <- SNPsfiltradosNAT2 %>%
  rename(rs2860840 = V2)

SNPsfiltradosNAT2 <- SNPsfiltradosNAT2 %>%
  slice(-1)

                  #ou

colnames(SNPsfiltradosNAT2) <- c("ID", "rs11188059", "rs2860840")
SNPsfiltradosNAT2 <- SNPsfiltradosNAT2 [-1,]

write.xlsx(SNPsfiltradosNAT2, 'SNPsNAT.txt')


# ----------------------- Haplo.stats ----------------------- 

#Separando os alelos em duas colunas
library(haplo.stats)

SNPsseparadosNAT <- SNPsfiltradosNAT2 %>% 
  separate_wider_delim(rs11188059, "/", names = c("rs11188059_1", "rs11188059_2")) %>%
  separate_wider_delim(rs2860840, "/", names = c("rs2860840_1", "rs2860840_2"))


#Pra rodar no haplo.em

#removi coluna "ID" (o comando pede só as colunas com os alelos)

SNPsNATSemID <- SNPsseparadosNAT
SNPsNATSemID$ID <- NULL


SNPsNATSemID2 <- SNPsNATSemID      #backup pra garantir


# Trocando 0 = G / 1 = A no rs11188059
for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 1] == 0) {SNPs.semID2[i, 1] <- "G"}}

for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 1] == 1) {SNPs.semID2[i, 1] <- "A"}}


for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 2] == 0) {SNPs.semID2[i, 2] <- "G"}}

for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 2] == 1) {SNPs.semID2[i, 2] <- "A"}}


# Trocando 0 = C / 1 = T no rs2860840
for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 3] == 0) {SNPs.semID2[i, 3] <- "C"}}

for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 3] == 1) {SNPs.semID2[i, 3] <- "T"}}


for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 4] == 0) {SNPs.semID2[i, 4] <- "C"}}

for (i in 1:nrow(SNPs.semID2)) {
  if (SNPs.semID2[i, 4] == 1) {SNPs.semID2[i, 4] <- "T"}}


#Rodando o comando do phasing
resulthaploNAT <- haplo.em(as.matrix(SNPsNATSemID2), locus.label = c('rs11188059', 'rs2860840'), miss.val=NA)


library(openxlsx)
resultadoNAT <- summary(resulthaploNAT)


library(clipr)
write.xlsx(resultadoNAT, 'resultadoNAT')
