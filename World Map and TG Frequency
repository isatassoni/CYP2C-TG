#====================================================================================
# WORLD MAP AND TG FREQUENCY
#====================================================================================
# Original Author: Caíque Manochio and Isadora Tassoni
# Updated by (and date): Isadora Tassoni 09/04/2025
# Command line:	


#load packages
library(pacman)
pacman::p_load(dplyr, readxl, rnaturalearth, ggplot2, tidyr, mapdata,
                sf, wbstats, rnaturalearthdata, tibble, ggrepel)


df <- read_xlsx(choose.files(), sheet = "Planilha1")
#Arquivo com a frequência e coordenadas das populações

#Verificar o banco de dados
glimpse(df)
#Transformando em numericos
df$latitude <- as.numeric(df$latitude)
df$longitude <- as.numeric(df$longitude)

# Lista de populações para aplicar a transformação
populacoes_selecionadas <- c("LWK", "ESN", "YRI", "MSL", "GWD", "ACB",
                             "ASW", "PJL", "GIH", "ITU", "STU", "BEB",
                             "CDX", "KHV", "CHS", "CHB", "JPT", "TSI",
                             "IBS", "GBR", "CEU", "FIN", "CLM", "MXL",
                             "PUR", "PEL")

# Aplicar transformação apenas às populações selecionadas
#transformações necessária para transforma a coordenada
#Talvez não é necessária olhar como esta a sua coordenadas 
df[df$POPULAÇÕES %in% populacoes_selecionadas, "Population_latitude"] <- 
  df[df$POPULAÇÕES %in% populacoes_selecionadas, "Population_latitude"] / 1e6

df[df$POPULAÇÕES %in% populacoes_selecionadas, "Population_longitude"] <- 
  df[df$POPULAÇÕES %in% populacoes_selecionadas, "Population_longitude"] / 1e6


#Criando o mapa
#Cria um dataframe com informações para criar um mapa 
world_map <- map_data("world")

ggplot() +
  geom_polygon(data = world_map, aes(x = long, y = lat, group = group), 
               fill = "white", color = "grey") +  # cria o mapa
  geom_point(data = df, aes(x = longitude, y = latitude, fill = TG), 
             size = 5, shape = 21) + # adiciona os pontos  
  geom_text(data = df, aes(x = longitude, y = latitude, label = Population), 
            hjust = -0.2, vjust = 0.5, size = 3, color = "black") +  # Adiciona os nomes das populações
  scale_fill_gradient(low = "white", high = "#00B1E2") +
  xlim(-180, 180) + ylim(-90, 90) +  
  labs(x = "Longitude", y = "Latitude", title = "Example Heat Map") +
  theme_minimal()

mapa_mundi <- rnaturalearth::ne_countries(returnclass = "sf")
